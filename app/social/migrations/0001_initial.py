# Generated by Django 5.1.6 on 2025-03-26 21:16

import datetime
import django.db.models.deletion
import django.utils.timezone
import social.models
import uuid
from django.conf import settings
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('contenttypes', '0002_remove_content_type_name'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Node',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('team_name', models.CharField(max_length=100)),
                ('host', models.CharField(max_length=255)),
                ('username', models.CharField(max_length=255, unique=True)),
                ('password', models.CharField(default='password', max_length=255)),
                ('api_key', models.CharField(blank=True, default='password', max_length=255)),
                ('is_active', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='SiteSetting',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('require_approval', models.BooleanField(default=True)),
            ],
        ),
        migrations.CreateModel(
            name='Author',
            fields=[
                ('display_name', models.CharField(blank=True, max_length=255, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('name', models.CharField(default='Name', max_length=200, null=True)),
                ('title', models.CharField(default='Title', max_length=200, null=True)),
                ('description', models.CharField(default='Description', max_length=200, null=True)),
                ('profile_image', models.ImageField(blank=True, null=True, upload_to='images/')),
                ('bio', models.TextField(blank=True, null=True)),
                ('fqid', models.URLField(blank=True, max_length=255, unique=True)),
                ('fqid_encoded', models.CharField(blank=True, max_length=255)),
                ('host', models.URLField(default='https://127.0.0.1:8000/')),
                ('github', models.URLField(blank=True, null=True)),
                ('profile_url', models.URLField(blank=True, null=True)),
                ('is_approved', models.BooleanField(default=False)),
                ('user', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Follow',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('published', models.DateTimeField(default=datetime.datetime.now, verbose_name='date published')),
                ('following', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='followers', to='social.author')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='following', to='social.author')),
            ],
            options={
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='FollowRequest',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('published', models.DateTimeField(default=datetime.datetime.now, verbose_name='date published')),
                ('actor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_follow_requests', to='social.author')),
                ('object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='received_follow_requests', to='social.author')),
            ],
            options={
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='InboxItem',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('object_id', models.UUIDField()),
                ('published', models.DateTimeField(default=datetime.datetime.now, verbose_name='date published')),
                ('visibility', models.CharField(choices=[('UNREAD', 'Unread'), ('READ', 'Read'), ('DELETED', 'Deleted')], default='UNREAD', max_length=20)),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
                ('recipient', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='inbox_items', to='social.author')),
                ('sender', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='sent_items', to='social.author')),
            ],
            options={
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='Like',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('published', models.DateTimeField(default=datetime.datetime.now, verbose_name='date published')),
                ('object_id', models.UUIDField()),
                ('fqid', models.URLField(blank=True, max_length=255, unique=True)),
                ('fqid_encoded', models.CharField(blank=True, max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.author')),
                ('content_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='contenttypes.contenttype')),
            ],
            options={
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='Post',
            fields=[
                ('title', models.CharField(blank=True, max_length=200, null=True)),
                ('post_url', models.URLField(blank=True, null=True)),
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('post_api_url', models.URLField(blank=True, null=True)),
                ('description', models.CharField(blank=True, default='No Description', max_length=200, null=True)),
                ('contentType', models.CharField(choices=[('text/plain', 'Plain Text'), ('text/markdown', 'Markdown'), ('image/png;base64', 'PNG Image'), ('image/jpeg;base64', 'JPEG Image'), ('application/base64', 'Base64 Image'), ('video/mp4', 'MP4 Video'), ('video/avi', 'AVI Video'), ('video/mov', 'MOV Video')], default='text/plain', max_length=20)),
                ('content', models.TextField()),
                ('published', models.DateTimeField(default=django.utils.timezone.now)),
                ('visibility', models.CharField(choices=[('PUBLIC', 'Public'), ('FRIENDS', 'Friends Only'), ('UNLISTED', 'Unlisted'), ('DELETED', 'Deleted')], default='PUBLIC', max_length=20)),
                ('video', models.FileField(blank=True, null=True, upload_to='videos/', validators=[social.models.validate_video_duration])),
                ('fqid', models.URLField(blank=True, max_length=255, unique=True)),
                ('fqid_encoded', models.CharField(blank=True, max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='posts', to='social.author')),
            ],
            options={
                'ordering': ['-published'],
            },
        ),
        migrations.CreateModel(
            name='Comment',
            fields=[
                ('id', models.UUIDField(default=uuid.uuid4, editable=False, primary_key=True, serialize=False)),
                ('comment', models.TextField()),
                ('content_type', models.CharField(choices=[('text/plain', 'Plain Text'), ('text/markdown', 'Markdown')], max_length=20)),
                ('published', models.DateTimeField(default=datetime.datetime.now, verbose_name='date published')),
                ('fqid', models.URLField(blank=True, max_length=255, unique=True)),
                ('fqid_encoded', models.CharField(blank=True, max_length=255)),
                ('author', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='social.author')),
                ('post', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='post_comments', to='social.post')),
            ],
            options={
                'ordering': ['-published'],
            },
        ),
    ]
